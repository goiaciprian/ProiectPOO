//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseCRUD.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class databaseiesc : DbContext
    {
        public databaseiesc()
            : base("name=databaseiesc")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Catalog_Note> Catalog_Note { get; set; }
        public virtual DbSet<Discipline> Disciplines { get; set; }
        public virtual DbSet<Studenti> Studentis { get; set; }
    
        public virtual ObjectResult<CatalogDELETE_Result> CatalogDELETE(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CatalogDELETE_Result>("CatalogDELETE", iDParameter);
        }
    
        public virtual ObjectResult<CatalogGET_Result> CatalogGET()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CatalogGET_Result>("CatalogGET");
        }
    
        public virtual ObjectResult<CatalogMERGE_Result> CatalogMERGE(Nullable<int> iD, string codDisciplina, Nullable<int> numarMatricol, Nullable<int> nota)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var codDisciplinaParameter = codDisciplina != null ?
                new ObjectParameter("CodDisciplina", codDisciplina) :
                new ObjectParameter("CodDisciplina", typeof(string));
    
            var numarMatricolParameter = numarMatricol.HasValue ?
                new ObjectParameter("NumarMatricol", numarMatricol) :
                new ObjectParameter("NumarMatricol", typeof(int));
    
            var notaParameter = nota.HasValue ?
                new ObjectParameter("Nota", nota) :
                new ObjectParameter("Nota", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CatalogMERGE_Result>("CatalogMERGE", iDParameter, codDisciplinaParameter, numarMatricolParameter, notaParameter);
        }
    
        public virtual ObjectResult<DisciplineDELETE_Result> DisciplineDELETE(string cod_Disciplina)
        {
            var cod_DisciplinaParameter = cod_Disciplina != null ?
                new ObjectParameter("Cod_Disciplina", cod_Disciplina) :
                new ObjectParameter("Cod_Disciplina", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisciplineDELETE_Result>("DisciplineDELETE", cod_DisciplinaParameter);
        }
    
        public virtual ObjectResult<DisciplineGET_Result> DisciplineGET()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisciplineGET_Result>("DisciplineGET");
        }
    
        public virtual ObjectResult<DisciplineMERGE_Result> DisciplineMERGE(string codDisciplina, string denumire, Nullable<int> numarCredite)
        {
            var codDisciplinaParameter = codDisciplina != null ?
                new ObjectParameter("CodDisciplina", codDisciplina) :
                new ObjectParameter("CodDisciplina", typeof(string));
    
            var denumireParameter = denumire != null ?
                new ObjectParameter("Denumire", denumire) :
                new ObjectParameter("Denumire", typeof(string));
    
            var numarCrediteParameter = numarCredite.HasValue ?
                new ObjectParameter("NumarCredite", numarCredite) :
                new ObjectParameter("NumarCredite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisciplineMERGE_Result>("DisciplineMERGE", codDisciplinaParameter, denumireParameter, numarCrediteParameter);
        }
    
        public virtual ObjectResult<StudentiDELETE_Result> StudentiDELETE(Nullable<int> numarMatricol)
        {
            var numarMatricolParameter = numarMatricol.HasValue ?
                new ObjectParameter("NumarMatricol", numarMatricol) :
                new ObjectParameter("NumarMatricol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentiDELETE_Result>("StudentiDELETE", numarMatricolParameter);
        }
    
        public virtual ObjectResult<StudentiGET_Result> StudentiGET()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentiGET_Result>("StudentiGET");
        }
    
        public virtual ObjectResult<StudentiMERGE_Result> StudentiMERGE(Nullable<int> numarMatricol, string nume, string prenume)
        {
            var numarMatricolParameter = numarMatricol.HasValue ?
                new ObjectParameter("NumarMatricol", numarMatricol) :
                new ObjectParameter("NumarMatricol", typeof(int));
    
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var prenumeParameter = prenume != null ?
                new ObjectParameter("Prenume", prenume) :
                new ObjectParameter("Prenume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentiMERGE_Result>("StudentiMERGE", numarMatricolParameter, numeParameter, prenumeParameter);
        }
    }
}
